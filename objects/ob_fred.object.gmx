<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_fred</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fric = 0.3;
vsp = 0;
hsp = 0;
grav = 0.6;
jumpspeed = 6;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Saber si se aprietan las teclas de control
Key_Left    = keyboard_check_direct(vk_left);
Key_Right   = keyboard_check_direct(vk_right);
Key_Jump    = keyboard_check_pressed(vk_up);
Key_Fire   = mouse_check_button_released(vk_space);

//Mover a izquierda y a derecha
if (Key_Left)
{
    hsp = -3;
    image_xscale = -1;
}

if (Key_Right)
{
    hsp = 3;
    image_xscale = 1;
}

//if (Key_Fire)
//{
//    instance_create(x,y,obj_flecha);
//}

//Que hacer si no apretamos controles o los apretamos al mismo tiempo
if ((Key_Left &amp;&amp; Key_Right) or (!Key_Left &amp;&amp; !Key_Right))
{
    hsp = 0;
}

//Saltar si se está en el suelo
if (Key_Jump)
{
//Salto simple
//    if (grounded) vsp = -7;
    if(grounded)
    {
        vsp = -jumpspeed;
    }
    else
    {
    }

}

vsp += grav;


//Colisiones en la horizontal
var hcollide;
hcollide = instance_place(x+hsp,y,obj_floor);
if(hcollide != noone)
{
    if ((hcollide).type == 1)
    {
        yplus = 0;
        while (place_meeting(x+hsp,y-yplus,obj_floor) &amp;&amp; yplus &lt;= abs(1*hsp)) yplus +=1;
        if place_meeting(x+hsp,y-yplus,obj_floor)
        {
            while (!place_meeting(x+sign(hsp),y,obj_floor)) x+=sign(hsp);
            hsp = 0;
        }
        else
        {
            y -= yplus;
        }
    }
}
//Ejecutar el movimiento
x += hsp;

//Ejecutar animación de personaje
if (hsp!=0){
    image_speed = 0.2;
}else{
    image_speed = 0;
}


//Colisiones en la vertical
var vcollide;
vcollide = instance_place(x,y+vsp,obj_floor);
if(vcollide != noone)
{
    if ((vcollide).type == 1)
    {
        while (!place_meeting(x,y+sign(vsp),obj_floor)) y+=sign(vsp);
        vsp = 0;
        grounded = 1;
    }
    if (((vcollide).type == 2) &amp;&amp; sign(vsp) == 1)
    {
        if (!place_meeting(x,y,obj_floor))
        {
            while (!place_meeting(x,y+sign(vsp),obj_floor)) y+=sign(vsp);
            vsp = 0;
            grounded = 1;
        }
    }
}    
else
{
    grounded = 0; 
}
    
//Ejecutar el movimiento

y += vsp;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>10,8</point>
    <point>10,10</point>
  </PhysicsShapePoints>
</object>
